name: MERGE_MAIN_CD

#retag the image
on:
 push:
  branches: [ "feature/bojbackOpentelemetry" ]

jobs:
  get_dev_image:
    runs-on: ubuntu-latest
    outputs:
      previous_tag_front: ${{ steps.metafront.outputs.previous_tag_front }}
      previous_tag_api: ${{ steps.metafront.outputs.previous_tag_api }}
    environment: prod
    permissions:
      contents: read
      packages: write
      id-token: write
      
    steps:
    - name: Clone nonprod repository
      uses: actions/checkout@v3
      with:
        repository: "the-cloud-camp/tcc-k8s-config-nonprd"
        token: ${{ secrets.GIT_TCC_DEPLOYMENT }}  # Use your PAT for private repositories
        path: 'tcc-k8s-config-nonprd'
        ref: group-1
      
    - name: Get Image Tag Front
      shell: bash
      id: metafront
      working-directory: tcc-k8s-config-nonprd
      run: |
        PREVIOUS_TAG_FRONT=$(yq e '.spec.template.spec.containers[0].image' manifest/dev_bojpawnfront.yaml | cut -d ':' -f 2)
        echo "previous_tag_front=$PREVIOUS_TAG_FRONT" >> "$GITHUB_OUTPUT"
    
    - name: Get Image Tag API
      shell: bash
      id: metaapi
      working-directory: tcc-k8s-config-nonprd
      run: |
          PREVIOUS_TAG_API=$(yq e '.spec.template.spec.containers[0].image' manifest/dev_bojpawnapi.yaml | cut -d ':' -f 2)
          echo "previous_tag_api=$PREVIOUS_TAG_API" >> "$GITHUB_OUTPUT"

  re_tagging:
    needs: get_dev_image
    runs-on: ubuntu-latest
    environment: prod
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
      
    steps:
    - name: echo tag 
      run: |
        echo "tag_front=${{ needs.get_dev_image.outputs.previous_tag_front }}"
        echo "tag_api=${{ needs.get_dev_image.outputs.previous_tag_api }}"

        #   steps:
        #     - name: Checkout tag on repository
        #       uses: actions/checkout@v3
      
        #     - name: Cat version
        #       run: |-
        #         cat package.json | jq -r .version
        #         echo "IMAGE_TAG=$(cat package.json | jq -r .version)" >> $GITHUB_ENV
      
        #     - name: Log into registry ${{ env.REGISTRY }}
        #       if: github.event_name != 'pull_request'
        #       uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        #       with:
        #         registry: ${{ env.REGISTRY }}
        #         username: ${{ github.actor }}
        #         password: ${{ secrets.GITHUB_TOKEN }}
      
        #     - name: Retag Image
        #       run: |
        #         export original_tag="${{ needs.checkout_image.outputs.previous_tag }}"
        #         source $GITHUB_ENV
        #         export new_tag=$IMAGE_TAG
      
        #         # Assuming you are using Docker
        #         docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$original_tag
        #         docker tag  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$original_tag ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$new_tag
        #         docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$new_tag